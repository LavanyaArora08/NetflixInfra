name: Netflix Movie Catalog Service Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP: 44.207.2.250 # Your EC2 instance public IP
  APP_DIR: /home/ubuntu  # Define the app directory as an environment variable
  ECR_REGISTRY: 700935310038.dkr.ecr.us-east-1.amazonaws.com  # Your AWS account ECR registry
  ECR_REPO_CATALOG: NetflixMoveCatalog  # ECR repository for the Netflix Catalog service
  ECR_REPO_FRONTEND: 08-netflix-frontend  # ECR repository for the Netflix Frontend service
  IMAGE_TAG: latest  # You can set it dynamically using Git SHA or another method if needed

jobs:
  Deploy:
    name: Deploy to EC2 and ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the app code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build Docker images for catalog and frontend services
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO_CATALOG:$IMAGE_TAG ./catalog
          docker build -t $ECR_REGISTRY/$ECR_REPO_FRONTEND:$IMAGE_TAG ./frontend

      - name: Push Docker images to AWS ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPO_CATALOG:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPO_FRONTEND:$IMAGE_TAG

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > mykey.pem
          chmod 600 mykey.pem

      - name: Create app directory on EC2
        run: |
          ssh -i mykey.pem -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP "mkdir -p $APP_DIR"

      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i mykey.pem -r ./* ubuntu@$EC2_PUBLIC_IP:$APP_DIR

      - name: Verify copied files on EC2
        run: |
          ssh -i mykey.pem -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP "ls -R $APP_DIR"

      - name: Execute deploy script on EC2
        run: |
          ssh -i mykey.pem -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP "cd $APP_DIR && bash deploy.sh"
